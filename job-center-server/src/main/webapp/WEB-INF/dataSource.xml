<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:property-placeholder location="WEB-INF/config.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" p:driverClassName="com.mysql.jdbc.Driver" p:url="${jdbc.jc.url}" p:username="${jdbc.jc.username}" p:password="${jdbc.jc.password}" p:dbType="mysql" p:filters="log4j" p:useGlobalDataSourceStat="true" p:validationQuery="SELECT 'x';" p:testWhileIdle="true" p:testOnBorrow="false" p:testOnReturn="false">
        <property name="connectProperties">
            <props>
                <prop key="allowMultiQueries">true</prop>
            </props>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource"/>
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource" p:typeAliasesPackage="com.nxin.framework.domain" p:mapperLocations="WEB-INF/dao/*.xml"/>
    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.RuntimeException"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="select*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(public * com.nxin.framework.manager.*.*(..))" /> <!--把事务控制在Service层-->
        <aop:advisor pointcut-ref="pointcut" advice-ref="advice"/>
    </aop:config>
    <bean id="errorDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.nxin.framework.dao.IErrorDao" />
        <property name="sqlSessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="jobDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.nxin.framework.dao.IJobDao" />
        <property name="sqlSessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="jobInstanceDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.nxin.framework.dao.IJobInstanceDao" />
        <property name="sqlSessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="jobRepository" class="com.nxin.framework.manager.JobRepository" p:errorDao-ref="errorDao" p:jobDao-ref="jobDao" p:jobInstanceDao-ref="jobInstanceDao"/>
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate" p:transactionManager-ref="transactionManager"/>
</beans>